version: '3.4'
services:

    # timescale:
    #     image: timescale/timescaledb
    #     ports:
    #         - "5432:5432"
    #     expose:
    #         - "5432"
    #     networks:
    #         - cryptobox
    #     environment:
    #         - POSTGRES_PASSWORD=password
    #         - POSTGRES_USER=postgres
    #

    # market_worker:
    #     build: ./kryptobot/workers
    #     command: pip install -e . && celery -A kryptobot.workers.market worker -l info
    #     working_dir: /usr/src/app
    #     volumes:
    #         - ./:/usr/src/app
    #     networks:
    #         - cryptobox
    #
    # catalyst_worker:
    #     build: ./kryptobot/workers
    #     command: pip install -e . && celery -A kryptobot.workers.catalyst worker -l info
    #     working_dir: /usr/src/app
    #     volumes:
    #         - ./:/usr/src/app
    #     networks:
    #         - cryptobox
    #
    # strategy_worker:
    #     build: ./kryptobot/workers
    #     command: pip install -e . && celery -A kryptobot.workers.strategy worker -l info
    #     working_dir: /usr/src/app
    #     volumes:
    #         - ./:/usr/src/app
    #     networks:
    #         - cryptobox
    #
    # harvester_worker:
    #     build: ./kryptobot/workers
    #     command: pip install -e . && celery -A kryptobot.workers.harvester worker -l info
    #     working_dir: /usr/src/app
    #     volumes:
    #         - ./:/usr/src/app
    #     networks:
    #         - cryptobox
    #
    # all_workers:
    #     build: ./kryptobot/workers
    #     command: pip install -e . && celery -A kryptobot.workers worker -l info
    #     working_dir: /usr/src/app
    #     volumes:
    #         - ./:/usr/src/app
    #     networks:
    #         - cryptobox

    # rest_api:
    #     build: ./kryptobot/server
    #     command: "python ./server/run.py"
    #     working_dir: /usr/src/app
    #     volumes:
    #         - ./kryptobot:/usr/src/app
    #     networks:
    #         - cryptobox

    redis:
        image: 'bitnami/redis:latest'
        environment:
            - ALLOW_EMPTY_PASSWORD=yes
            # - REDIS_PASSWORD=password123
        ports:
            - '6379:6379'
        networks:
            - cryptobox

    jupyter:
        build: .
        command: jupyter lab --ip=0.0.0.0 --allow-root
        ports:
            - "8888:8888"
        working_dir: /usr/src/app/notebooks
        expose:
            - "8888"
        volumes:
            - ./:/usr/src/app
        networks:
            - cryptobox

networks:
    cryptobox:
        driver: bridge
